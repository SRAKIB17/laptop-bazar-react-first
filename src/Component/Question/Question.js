import React from 'react';
import './Question.css'
const Question = () => {
    return (
        <div>
            <div className='propsQuestion'>
                <h2>Props vs State</h2>
                <table>
                    <tr>
                        <th>Props</th>
                        <th>State</th>
                    </tr>
                    <tr>
                        <td>
                        ডেটা এক উপাদান থেকে অন্য উপাদানে প্রেরণ করা হয়।
                        </td>
                        <td>
                        তথ্য শুধুমাত্র উপাদান মধ্যে পাস করা হয়.
                        </td>
                    </tr>
                    <tr>
                        <td>
                        এটি অপরিবর্তনীয় (পরিবর্তন করা যাবে না)।
                        </td>
                        <td>
                        এটি পরিবর্তনযোগ্য (পরিবর্তন করা যেতে পারে)।
                        </td>
                    </tr>
                    <tr>
                        <td>
                        State এবং functional components  সাথে প্রপস ব্যবহার করা যেতে পারে।
                        </td>
                        <td>
                        স্টেট শুধুমাত্র স্টেট কম্পোনেন্ট/ক্লাস কম্পোনেন্টের সাথে ব্যবহার করা যেতে পারে 
                        </td>
                    </tr>
                    <tr>
                        <td>
                        Props read only
                        </td>
                        <td>
                        State read and write able.
                        </td>
                    </tr>
                </table>
            </div>
            <div className='reactWork'>
                <h3>How react work</h3>
                <p>
                ক্লায়েন্ট-সাইড অ্যাপস তৈরি করার সময়, Facebook ডেভেলপারদের একটি দল বুঝতে পেরেছিল যে DOM ধীর (দস্তাবেজ অবজেক্ট মডেল (DOM) হল HTML এবং XML নথিগুলির জন্য একটি অ্যাপ্লিকেশন প্রোগ্রামিং ইন্টারফেস (API)। এটি নথিগুলির যৌক্তিক কাঠামো এবং উপায় নির্ধারণ করে একটি নথি অ্যাক্সেস করা হয় এবং ম্যানিপুলেট করা হয়।) সুতরাং, এটিকে দ্রুততর করতে, প্রতিক্রিয়া একটি ভার্চুয়াল DOM প্রয়োগ করে যা মূলত জাভাস্ক্রিপ্টে একটি DOM ট্রি উপস্থাপনা। সুতরাং যখন এটি DOM-এ পড়তে বা লিখতে হবে, তখন এটি এর ভার্চুয়াল উপস্থাপনা ব্যবহার করবে। তারপর ভার্চুয়াল DOM ব্রাউজারের DOM আপডেট করার সবচেয়ে কার্যকর উপায় খুঁজে বের করার চেষ্টা করবে। ব্রাউজার DOM উপাদানগুলির বিপরীতে, প্রতিক্রিয়া উপাদানগুলি সরল বস্তু এবং তৈরি করা সস্তা। প্রতিক্রিয়া DOM প্রতিক্রিয়া উপাদানগুলির সাথে মেলে DOM আপডেট করার যত্ন নেয়। এর কারণ হল জাভাস্ক্রিপ্ট খুব দ্রুত এবং এর ম্যানিপুলেশন দ্রুত করার জন্য এটিতে একটি DOM গাছ রাখা মূল্যবান। যদিও প্রতিক্রিয়া ব্রাউজারে ব্যবহার করার কথা ভাবা হয়েছিল, এর ডিজাইনের কারণে এটি Node.js এর সাথে সার্ভারেও ব্যবহার করা যেতে পারে।
                </p>
            </div>
            <div className='state'>
                <h3>State</h3>
                <p>
                ইভেন্ট হ্যান্ডলার, সার্ভার প্রতিক্রিয়া, বা প্রপ পরিবর্তনের প্রতিক্রিয়ায় রাজ্য আপডেট করা যেতে পারে। এটি setState() পদ্ধতি ব্যবহার করে করা হয়। setState() পদ্ধতিটি কম্পোনেন্ট স্টেটে করা সমস্ত আপডেটকে সারিবদ্ধ করে এবং কম্পোনেন্ট এবং এর বাচ্চাদের আপডেট করা অবস্থায় পুনরায় রেন্ডার করার জন্য প্রতিক্রিয়াকে নির্দেশ দেয়।<br />
                </p>
                <ul>
                    <li>ব্যবহারকারীর কর্ম বা নেটওয়ার্ক পরিবর্তনের উপর ভিত্তি করে একটি রাষ্ট্র পরিবর্তন করা যেতে পারে</li>
                    <li>
                    প্রতিবার একটি বস্তুর অবস্থা পরিবর্তিত হলে, প্রতিক্রিয়া ব্রাউজারে উপাদানটিকে পুনরায় রেন্ডার করে
                    </li>
                    <li>
                    স্টেট অবজেক্ট একাধিক বৈশিষ্ট্য সংরক্ষণ করতে পারে
                    </li>
                    <li>
                    setState() ফাংশন নতুন এবং পূর্ববর্তী অবস্থার মধ্যে একটি অগভীর মার্জ সঞ্চালন করে
                    </li>
                </ul>
            </div>
        </div>
    );
};

export default Question;